name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[code-analysis]
      - name: Run pylint
        run: pylint inventory_management_system_api test

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]

      - name: Create logging configuration file
        run: cp inventory_management_system_api/logging.example.ini inventory_management_system_api/logging.ini

      - name: Run unit tests
        run: pytest -c test/pytest.ini test/unit/ --cov

  e2e-tests:
    needs: [unit-tests]
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@b0a1493307c4e9b82ed61f3858d606c5ff190c64 #v1.10.0
        with:
          mongodb-version: "7.0"
          mongodb-username: root
          mongodb-password: example
          mongodb-db: test-ims

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]

      - name: Create logging configuration file
        run: cp inventory_management_system_api/logging.example.ini inventory_management_system_api/logging.ini

      - name: Run e2e tests
        run: pytest -c test/pytest.ini test/e2e/ --cov

  docker:
    # This job triggers only if all the other jobs succeed. It builds the Docker image and if successful,
    # it pushes it to Harbor.
    needs: [linting, unit-tests, e2e-tests]
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Login to Harbor
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ secrets.HARBOR_URL }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ secrets.HARBOR_URL }}/ims-api

      - name: Build and push Docker image to Harbor
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
