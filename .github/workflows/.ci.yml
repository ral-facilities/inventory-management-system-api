name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[code-analysis]
      - name: Run pylint
        run: pylint inventory_management_system_api test

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Create environment file
        run: cp inventory_management_system_api/.env.example inventory_management_system_api/.env

      - name: Create logging configuration file
        run: cp inventory_management_system_api/logging.example.ini inventory_management_system_api/logging.ini

      - name: Run unit tests
        run: pytest test/unit/ --cov

  e2e-tests:
    needs: [unit-tests]
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@b0a1493307c4e9b82ed61f3858d606c5ff190c64 #v1.10.0
        with:
          mongodb-version: "6.0"
          mongodb-username: root
          mongodb-password: example
          mongodb-db: test-ims

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Create environment file
        run: cp inventory_management_system_api/.env.example inventory_management_system_api/.env

      - name: Create logging configuration file
        run: cp inventory_management_system_api/logging.example.ini inventory_management_system_api/logging.ini

      - name: Run e2e tests
        run: DATABASE__NAME="test-ims" pytest test/e2e/ --cov

  docker:
    # This job triggers only if all the other jobs succeed and does different things depending on the context.
    # The job builds the Docker image in all cases and also pushes the image to Harbor only if something is
    # pushed to the develop branch.
    needs: [linting, unit-tests, e2e-tests]
    name: Docker
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

    - name: Login to Harbor
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: harbor.stfc.ac.uk/inventory-management-system
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: harbor.stfc.ac.uk/inventory-management-system/ims-api

    - name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' && 'Build and push Docker image to Harbor' || 'Build Docker image' }}
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      with:
        context: .
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}