name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[code-analysis]
      - name: Run pylint
        run: pylint inventory_management_system_api test

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Create environment file
        run: cp inventory_management_system_api/.env.example inventory_management_system_api/.env

      - name: Create logging configuration file
        run: cp inventory_management_system_api/logging.example.ini inventory_management_system_api/logging.ini

      - name: Run unit tests
        run: pytest test/unit/ --cov

  e2e-tests:
    needs: [unit-tests]
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@b0a1493307c4e9b82ed61f3858d606c5ff190c64 #v1.10.0
        with:
          mongodb-version: "6.0"
          mongodb-username: root
          mongodb-password: example
          mongodb-db: test-ims

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Create environment file
        run: cp inventory_management_system_api/.env.example inventory_management_system_api/.env

      - name: Create logging configuration file
        run: cp inventory_management_system_api/logging.example.ini inventory_management_system_api/logging.ini

      - name: Run e2e tests
        run: DATABASE__NAME="test-ims" pytest test/e2e/ --cov

  docker:
    # This job triggers only if all the other jobs succeed. It builds the Docker image and if successful,
    # it pushes it to Harbor.
    needs: [linting, unit-tests, e2e-tests]
    name: Docker
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Login to Harbor
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: harbor.stfc.ac.uk/inventory-management-system
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
      with:
        images: harbor.stfc.ac.uk/inventory-management-system/ims-api

    - name: Build and push Docker image to Harbor
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
      with:
        context: .
        file: ./Dockerfile.prod
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
